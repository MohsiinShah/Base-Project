// Generated by Dagger (https://dagger.dev).
package com.openweathermap.forecast.di.modules;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesOkHttpClientFactory implements Factory<OkHttpClient> {
  private final NetworkModule module;

  private final Provider<Context> contextProvider;

  public NetworkModule_ProvidesOkHttpClientFactory(NetworkModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public OkHttpClient get() {
    return providesOkHttpClient(module, contextProvider.get());
  }

  public static NetworkModule_ProvidesOkHttpClientFactory create(NetworkModule module,
      Provider<Context> contextProvider) {
    return new NetworkModule_ProvidesOkHttpClientFactory(module, contextProvider);
  }

  public static OkHttpClient providesOkHttpClient(NetworkModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.providesOkHttpClient(context));
  }
}
