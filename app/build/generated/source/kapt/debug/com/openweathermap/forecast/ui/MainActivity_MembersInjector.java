// Generated by Dagger (https://dagger.dev).
package com.openweathermap.forecast.ui;

import com.openweathermap.forecast.utils.MyAppPreferences;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<MainViewModel> viewModelProvider;

  private final Provider<MyAppPreferences> sharedPrefsProvider;

  public MainActivity_MembersInjector(Provider<MainViewModel> viewModelProvider,
      Provider<MyAppPreferences> sharedPrefsProvider) {
    this.viewModelProvider = viewModelProvider;
    this.sharedPrefsProvider = sharedPrefsProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<MainViewModel> viewModelProvider,
      Provider<MyAppPreferences> sharedPrefsProvider) {
    return new MainActivity_MembersInjector(viewModelProvider, sharedPrefsProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectViewModel(instance, viewModelProvider.get());
    injectSharedPrefs(instance, sharedPrefsProvider.get());
  }

  @InjectedFieldSignature("com.openweathermap.forecast.ui.MainActivity.viewModel")
  public static void injectViewModel(MainActivity instance, MainViewModel viewModel) {
    instance.viewModel = viewModel;
  }

  @InjectedFieldSignature("com.openweathermap.forecast.ui.MainActivity.sharedPrefs")
  public static void injectSharedPrefs(MainActivity instance, MyAppPreferences sharedPrefs) {
    instance.sharedPrefs = sharedPrefs;
  }
}
