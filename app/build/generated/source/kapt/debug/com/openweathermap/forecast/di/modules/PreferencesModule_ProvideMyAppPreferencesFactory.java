// Generated by Dagger (https://dagger.dev).
package com.openweathermap.forecast.di.modules;

import android.content.SharedPreferences;
import com.openweathermap.forecast.utils.MyAppPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PreferencesModule_ProvideMyAppPreferencesFactory implements Factory<MyAppPreferences> {
  private final PreferencesModule module;

  private final Provider<SharedPreferences> preferencesProvider;

  public PreferencesModule_ProvideMyAppPreferencesFactory(PreferencesModule module,
      Provider<SharedPreferences> preferencesProvider) {
    this.module = module;
    this.preferencesProvider = preferencesProvider;
  }

  @Override
  public MyAppPreferences get() {
    return provideMyAppPreferences(module, preferencesProvider.get());
  }

  public static PreferencesModule_ProvideMyAppPreferencesFactory create(PreferencesModule module,
      Provider<SharedPreferences> preferencesProvider) {
    return new PreferencesModule_ProvideMyAppPreferencesFactory(module, preferencesProvider);
  }

  public static MyAppPreferences provideMyAppPreferences(PreferencesModule instance,
      SharedPreferences preferences) {
    return Preconditions.checkNotNullFromProvides(instance.provideMyAppPreferences(preferences));
  }
}
